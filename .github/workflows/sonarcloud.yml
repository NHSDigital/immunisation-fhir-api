name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [labeled, opened, synchronize, reopened, unlabeled]

jobs:
  sonarcloud:
    name: SonarCloud
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'dependency') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up AWS credentials
        env:
          AWS_ACCESS_KEY_ID: "FOOBARKEY"
          AWS_SECRET_ACCESS_KEY: "FOOBARSECRET"
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

      - name: Initialize Unit Test Failure Tracker
        run: echo "false" > test_failed.txt

      - name: Run unittest with coverage-delta
        id: delta
        continue-on-error: true
        run: |
          pip install poetry==1.8.4 mypy-boto3-dynamodb==1.35.54 boto3==1.26.165 coverage botocore==1.29.165 jmespath==1.0.1 python-dateutil==2.9.0 urllib3==1.26.20 s3transfer==0.6.2 typing-extensions==4.12.2
          poetry run coverage run --source=delta_backend -m unittest discover -s delta_backend || echo "delta tests failed" >> failed_tests.txt
          poetry run coverage xml -o sonarcloud-coverage-delta.xml

      - name: Run Test Failure Summary
        id: check_failure
        run: |
          if [ -s failed_tests.txt ]; then
            echo "The following tests failed:"
            cat failed_tests.txt

            while IFS= read -r line; do
              echo "##[error]Test Failures: $line"
            done < failed_tests.txt
            
            exit 1
          else
            echo "All tests passed."
          fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
