name: PR Quality Check
on: pull_request
jobs:
  link-ticket:
    runs-on: ubuntu-latest
    steps:
      - name: Check ticket name conforms to requirements
        run: echo ${{ github.event.pull_request.head.ref }} | grep -i -E -q "(amb-[0-9]+)|(ambspii-[0-9]+)|(adz-[0-9]+)|(amb-[0-9]+)|(dependabot\/)"
        continue-on-error: true

      - name: Grab ticket name
        if: contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-') || contains(github.event.pull_request.head.ref, 'ambspii-') || contains(github.event.pull_request.head.ref, 'AMBSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        run: echo ::set-env name=TICKET_NAME::$(echo ${{ github.event.pull_request.head.ref }} | grep -i -o '\(amb-[0-9]\+\)\|\(ambspii-[0-9]\+\)\|\(adz-[0-9]\+\)|\(amb-[0-9]\+\)' | tr '[:lower:]' '[:upper:]')
        continue-on-error: true
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Comment on PR with link to JIRA ticket
        if: contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-') || contains(github.event.pull_request.head.ref, 'ambspii-') || contains(github.event.pull_request.head.ref, 'AMBSPII-') || contains(github.event.pull_request.head.ref, 'adz-') || contains(github.event.pull_request.head.ref, 'ADZ-') || contains(github.event.pull_request.head.ref, 'amb-') || contains(github.event.pull_request.head.ref, 'AMB-')
        continue-on-error: true
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            This branch is work on a ticket in the NHS Digital AMB JIRA Project. Here's a handy link to the ticket:
            # [${{ env.TICKET_NAME }}](https://nhsd-jira.digital.nhs.uk/browse/${{ env.TICKET_NAME}})
    
  coverage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v3
          with:
            python-version: '3.10'
        
        - name: Set up AWS credentials
          env:
            AWS_ACCESS_KEY_ID: "FOOBARKEY"
            AWS_SECRET_ACCESS_KEY: "FOOBARSECRET"
          run: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY  
        
        - name: Install dependencies
          run: |
            pip install poetry moto==4.2.11 coverage redis botocore==1.35.49 simplejson responses structlog fhir.resources jsonpath_ng pydantic==1.10.13 requests aws-lambda-typing cffi pyjwt boto3-stubs-lite[dynamodb]~=1.26.90

        - name: Run unit tests and generate coverage report for filenameprocessor
          run: |        
            mkdir -p /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/backend/coverage_html_report
            coverage run -m unittest discover
            coverage report
            coverage xml -o /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/backend/coverage_html_report/test_coverage.xml
          working-directory: "/home/runner/work/immunisation-fhir-api/immunisation-fhir-api/backend"
          continue-on-error: true

        - name: List coverage report file
          run: |
            ls -R /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/backend/coverage_html_report

        - name: Aggregate coverage reports
          run: |
            mkdir -p /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/coverage_html_report
            rm -rf /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/coverage_html_report/*
            mv /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/backend/coverage_html_report/test_coverage.xml /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/coverage_html_report/test_coverage.xml  

        - name: Commit and push coverage reports
          if: success()
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git fetch origin ${{ github.head_ref }}
            git checkout ${{ github.head_ref }}
            git pull origin ${{ github.head_ref }}
            git add /home/runner/work/immunisation-fhir-api/immunisation-fhir-api/coverage_html_report/*.xml
            git commit -m "Add coverage index as XML format."
            git push origin ${{ github.head_ref }}        